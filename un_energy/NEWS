Changes to Version 1.5-0

   	o  NAMESPACE: insert UseDynLib; remove zzz.R, .First.Lib()
   	
Changes to Version 1.4-0

	o  NAMESPACE added. 
	o  (dcov.c, Eindep.c) Unused N was removed. 
	o  (dcov.c) In case dcov=0, bypass the unnecessary loop
	   that generates replicates (in dCOVtest and dCovTest). 
	   In this case dcor=0 and test is not significant.
	   (dcov=0 if one of the samples is constant.)
	o  (Eqdist.R) in eqdist.e and eqdist.etest, method="disco" 
	   is replaced by two options: "discoB" (between sample 
	   components) and "discoF" (disco F ratio). 
	o  (disco.R) Added disco.between and internal functions
	   that compute the disco between-sample component and 
	   corresponding test. 
	o  (utilities.c) In permute function replaced rand_unif 
	   with runif. 
	o  (energy.c) In ksampleEtest the pval computation
	   changed from ek/B to (ek+1)/(B+1) as it should be for
	   a permutation test, and unneeded int* n removed.

Changes to Version 1.3-0

	o  In distance correlation, distance covariance functions 
	   (dcov, dcor, DCOR) and dcov.test, arguments x and y can now 
	   optionally be distance objects (result of dist function or
	   as.dist). Matrices x and y will always be treated as data.
	   
	o  Functions in dcov.c and utilities.c were modified to support
	   arguments that are distances rather than data. In utilities.c
	   the index_distance function changed. In dcov.c there are many
	   changes. Most importantly for the exported objects, there is
	   now an extra required parameter in the dims argument passed
	   from R. In dCOVtest dims must be a vector c(n, p, q, dst, R)
	   where n is sample size, p and q are dimensions of x and y,
	   dst is logical (TRUE if distances) and R is number of replicates.
	   For dCOV dims must be c(n, p, q, dst).
	   
Changes to Version 1.2-0	   
	   
	o  disco (distance components) added for one-way layout.
	o  A method argument was added to ksample.e, eqdist.e, and
	   eqdist.etest, method = c("original", "disco").
        o  A method argument was added to edist, which summarizes cluster
           distances in a table:
               method = c("cluster","discoB","discoF"))
               
